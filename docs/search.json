{"Structs/SVGPolygon.html#/s:ZvP8SwiftSVG10SVGElement11elementNameSS":{"name":"elementName","parent_name":"SVGPolygon"},"Structs/SVGPolygon.html#/s:vP8SwiftSVG10SVGElement19supportedAttributesGVs10DictionarySSGSqFSST___":{"name":"supportedAttributes","parent_name":"SVGPolygon"},"Structs/SVGPolygon.html#/s:vP8SwiftSVG15SVGShapeElement8svgLayerCSo12CAShapeLayer":{"name":"svgLayer","parent_name":"SVGPolygon"},"Structs/SVGPolygon.html#/s:FP8SwiftSVG10SVGElement17didProcessElementFT2inGSqPS_19SVGContainerElement___GSqCSo6CGPath_":{"name":"didProcessElement(in:)","parent_name":"SVGPolygon"},"Structs/SVGPath.html#/s:FV8SwiftSVG7SVGPathcFT16singlePathStringSS_S0_":{"name":"init(singlePathString:)","abstract":"<p>Initializer to to set the <code>svgLayer</code>&lsquo;s cgPath. The path string does not have to be a single path for the whole element, but can include multiple subpaths in the <code>d</code> attribute. For instance, the following is a valid path string to pass:</p>","parent_name":"SVGPath"},"Structs/SVGPath.html#/s:FV8SwiftSVG7SVGPath6parseDFSST_":{"name":"parseD(_:)","abstract":"<p>Function that takes a <code>d</code> path string attribute and sets the <code>svgLayer</code>&lsquo;s <code>cgPath</code></p>","parent_name":"SVGPath"},"Structs/SVGPolyline.html#/s:ZvP8SwiftSVG10SVGElement11elementNameSS":{"name":"elementName","parent_name":"SVGPolyline"},"Structs/SVGPolyline.html#/s:vP8SwiftSVG10SVGElement19supportedAttributesGVs10DictionarySSGSqFSST___":{"name":"supportedAttributes","parent_name":"SVGPolyline"},"Structs/SVGPolyline.html#/s:vP8SwiftSVG15SVGShapeElement8svgLayerCSo12CAShapeLayer":{"name":"svgLayer","parent_name":"SVGPolyline"},"Structs/SVGPolyline.html#/s:FP8SwiftSVG10SVGElement17didProcessElementFT2inGSqPS_19SVGContainerElement___GSqCSo6CGPath_":{"name":"didProcessElement(in:)","parent_name":"SVGPolyline"},"Structs/SVGRootElement.html#/s:ZvP8SwiftSVG10SVGElement11elementNameSS":{"name":"elementName","parent_name":"SVGRootElement"},"Structs/SVGRootElement.html#/s:vP8SwiftSVG19SVGContainerElement17attributesToApplyGVs10DictionarySSSS_":{"name":"attributesToApply","parent_name":"SVGRootElement"},"Structs/SVGRootElement.html#/s:vP8SwiftSVG19SVGContainerElement14containerLayerCSo7CALayer":{"name":"containerLayer","parent_name":"SVGRootElement"},"Structs/SVGRootElement.html#/s:vP8SwiftSVG10SVGElement19supportedAttributesGVs10DictionarySSGSqFSST___":{"name":"supportedAttributes","parent_name":"SVGRootElement"},"Structs/SVGRootElement.html#/s:FP8SwiftSVG10SVGElement17didProcessElementFT2inGSqPS_19SVGContainerElement___GSqCSo6CGPath_":{"name":"didProcessElement(in:)","parent_name":"SVGRootElement"},"Structs/SVGRootElement.html":{"name":"SVGRootElement","abstract":"<p>Concrete implementation that creates a container from a <code>&lt;svg&gt;</code> element and its attributes. This will almost always be the root container element that will container all other <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SVGElement.html\">SVGElement</a></code> layers</p>"},"Structs/SVGPolyline.html":{"name":"SVGPolyline","abstract":"<p>Concrete implementation that creates a <code>CAShapeLayer</code> from a <code>&lt;polyline&gt;</code> element and its attributes</p>"},"Structs.html#/s:V8SwiftSVG26SVGParserSupportedElements":{"name":"SVGParserSupportedElements","abstract":"<p>A struct that lists all the supported elements and attributes for a parser</p>"},"Structs/SVGPath.html":{"name":"SVGPath","abstract":"<p>Concrete implementation that creates a <code>CAShapeLayer</code> from a <code>&lt;path&gt;</code> element and its attributes</p>"},"Structs/SVGPolygon.html":{"name":"SVGPolygon","abstract":"<p>Concrete implementation that creates a <code>CAShapeLayer</code> from a <code>&lt;polygon&gt;</code> element and its attributes</p>"},"Protocols/SVGShapeElement.html#/s:vP8SwiftSVG15SVGShapeElement8svgLayerCSo12CAShapeLayer":{"name":"svgLayer","abstract":"<p>The <code>CAShapeLayer</code> that can draw the path data.</p>","parent_name":"SVGShapeElement"},"Protocols/SVGShapeElement.html#/s:vE8SwiftSVGPS_15SVGShapeElement11boundingBoxGSqVSC6CGRect_":{"name":"boundingBox","abstract":"<p>The minimum rect that encompasses all of the subpaths</p>","parent_name":"SVGShapeElement"},"Protocols/SVGParser.html#/s:FP8SwiftSVG9SVGParsercFT7SVGDataV10Foundation4Data17supportedElementsGSqVS_26SVGParserSupportedElements_10completionGSqFCS_8SVGLayerT___x":{"name":"init(SVGData:supportedElements:completion:)","abstract":"<p>Initializer to create a new <code>SVGParser</code> instance</p>","parent_name":"SVGParser"},"Protocols/SVGParser.html#/s:vP8SwiftSVG9SVGParser15completionBlockGSqFCS_8SVGLayerT__":{"name":"completionBlock","abstract":"<p>A closure that is executed after all elements have been processed. Should be guaranteed to be executed after all elements have been processed, even if parsing asynchronously.</p>","parent_name":"SVGParser"},"Protocols/SVGParser.html#/s:vP8SwiftSVG9SVGParser17supportedElementsGSqVS_26SVGParserSupportedElements_":{"name":"supportedElements","abstract":"<p>A struct listing all the elements and its attribites that should be parsed</p>","parent_name":"SVGParser"},"Protocols/SVGParser.html#/s:vP8SwiftSVG9SVGParser14containerLayerCS_8SVGLayer":{"name":"containerLayer","abstract":"<p>A <code>CALayer</code> that will house the finished sublayers opf the SVG doc.</p>","parent_name":"SVGParser"},"Protocols/SVGParser.html#/s:FP8SwiftSVG9SVGParser12startParsingFT_T_":{"name":"startParsing()","abstract":"<p>Starts parsing the SVG</p>","parent_name":"SVGParser"},"Protocols/SVGContainerElement.html#/s:vP8SwiftSVG19SVGContainerElement14containerLayerCSo7CALayer":{"name":"containerLayer","abstract":"<p>The layer that stores all the SVG sublayers</p>","parent_name":"SVGContainerElement"},"Protocols/SVGContainerElement.html#/s:vP8SwiftSVG19SVGContainerElement17attributesToApplyGVs10DictionarySSSS_":{"name":"attributesToApply","abstract":"<p>The attributes to apply to all sublayers. </p>","parent_name":"SVGContainerElement"},"Protocols/SVGElement.html#/s:ZvP8SwiftSVG10SVGElement11elementNameSS":{"name":"elementName","abstract":"<p>The element name as defined in the SVG specification</p>","parent_name":"SVGElement"},"Protocols/SVGElement.html#/s:vP8SwiftSVG10SVGElement19supportedAttributesGVs10DictionarySSGSqFSST___":{"name":"supportedAttributes","abstract":"<p>Dictionary of attributes of a given element that are supported by the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SVGParser.html\">SVGParser</a></code>. Keys are the name of an element&rsquo;s attribute such as <code>d</code>, <code>fill</code>, and <code>rx</code>. Values are a closure that is used to process the given attribute.</p>","parent_name":"SVGElement"},"Protocols/SVGElement.html#/s:FP8SwiftSVG10SVGElement17didProcessElementFT2inGSqPS_19SVGContainerElement___GSqCSo6CGPath_":{"name":"didProcessElement(in:)","abstract":"<p>An action to perform once the parser has dispatched all attributes to a given <code>SVGElement</code> instance</p>","parent_name":"SVGElement"},"Protocols/SVGElement.html":{"name":"SVGElement","abstract":"<p>A protocol describing an instance that can parse a single SVG element such as"},"Protocols/SVGContainerElement.html":{"name":"SVGContainerElement","abstract":"<p>A protocol that describes an instance that can store SVG sublayers and can apply a single attributes to all sublayers.</p>"},"Protocols/SVGParser.html":{"name":"SVGParser","abstract":"<p>A protocol describing an XML parser capable of parsing SVG docs</p>"},"Protocols/SVGShapeElement.html":{"name":"SVGShapeElement","abstract":"<p>A protocol that describes an instance that stores the path as a <code>CAShapeLayer</code></p>"},"Extensions/UIView.html#/s:FE8SwiftSVGCSo6UIViewcFT10pathStringSS_S0_":{"name":"init(pathString:)","abstract":"<p>Convenience initializer that instantiates a new <code>UIView</code> instance with a single path <code>d</code> string. The path will be parsed synchronously.</p>","parent_name":"UIView"},"Extensions/UIView.html#/s:FE8SwiftSVGCSo6UIViewcFT8SVGNamedSS6parserGSqPS_9SVGParser__10completionGSqFCS_8SVGLayerT___S0_":{"name":"init(SVGNamed:parser:completion:)","abstract":"<p>Convenience initializer that instantiates a new <code>UIView</code> for the given SVG file in the main bundle</p>","parent_name":"UIView"},"Extensions/UIView.html#/s:FE8SwiftSVGCSo6UIViewcFT6SVGURLV10Foundation3URL6parserGSqPS_9SVGParser__10completionGSqFCS_8SVGLayerT___S0_":{"name":"init(SVGURL:parser:completion:)","abstract":"<p>Convenience initializer that instantiates a new <code>UIView</code> instance for the given SVG file at the given URL</p>","parent_name":"UIView"},"Extensions/UIView.html#/s:FE8SwiftSVGCSo6UIViewcFT7SVGDataV10Foundation4Data6parserGSqPS_9SVGParser__10completionGSqFCS_8SVGLayerT___S0_":{"name":"init(SVGData:parser:completion:)","abstract":"<p>Convenience initializer that instantiates a new <code>UIView</code> instance with the given SVG data</p>","parent_name":"UIView"},"Extensions/UIBezierPath.html#/s:FE8SwiftSVGCSo12UIBezierPathcFT10pathStringSS_S0_":{"name":"init(pathString:)","abstract":"<p>Parses a single path string. Parses synchronously</p>","parent_name":"UIBezierPath"},"Extensions/CAShapeLayer.html#/s:FE8SwiftSVGCSo12CAShapeLayercFT10pathStringSS_S0_":{"name":"init(pathString:)","abstract":"<p>Convenience initalizer that can path a single path string and returns a <code>CAShapeLayer</code></p>","parent_name":"CAShapeLayer"},"Extensions/CALayer.html#/s:FE8SwiftSVGCSo7CALayercFT6SVGURLV10Foundation3URL6parserGSqPS_9SVGParser__10completionFCS_8SVGLayerT__S0_":{"name":"init(SVGURL:parser:completion:)","abstract":"<p>Convenience initializer that creates a new <code>CALayer</code> from a local or remote URL. You must provide a completion block and add the passed <code>SVGLayer to a sublayer</code>.</p>","parent_name":"CALayer"},"Extensions/CALayer.html#/s:FE8SwiftSVGCSo7CALayercFT7SVGDataV10Foundation4Data6parserGSqPS_9SVGParser__10completionFCS_8SVGLayerT__S0_":{"name":"init(SVGData:parser:completion:)","abstract":"<p>Convenience initializer that creates a new <code>CALayer</code> from SVG data. You must provide a completion block and add the passed <code>SVGLayer to a sublayer</code>.</p>","parent_name":"CALayer"},"Extensions/CALayer.html":{"name":"CALayer","abstract":"<p>A set of convenience initializers that create new <code>CALayer</code> instances from SVG data.</p>"},"Extensions/CAShapeLayer.html":{"name":"CAShapeLayer"},"Extensions/UIBezierPath.html":{"name":"UIBezierPath","abstract":"<p>Convenience initializer that can parse a single path string and returns a <code>UIBezierPath</code></p>"},"Extensions/UIView.html":{"name":"UIView","abstract":"<p>A set of convenience initializers that create new <code>UIView</code> instances from SVG data</p>"},"Classes/SVGLine.html#/s:ZvP8SwiftSVG10SVGElement11elementNameSS":{"name":"elementName","parent_name":"SVGLine"},"Classes/SVGLine.html#/s:vP8SwiftSVG15SVGShapeElement8svgLayerCSo12CAShapeLayer":{"name":"svgLayer","parent_name":"SVGLine"},"Classes/SVGLine.html#/s:vP8SwiftSVG10SVGElement19supportedAttributesGVs10DictionarySSGSqFSST___":{"name":"supportedAttributes","parent_name":"SVGLine"},"Classes/SVGLine.html#/s:FP8SwiftSVG10SVGElement17didProcessElementFT2inGSqPS_19SVGContainerElement___GSqCSo6CGPath_":{"name":"didProcessElement(in:)","parent_name":"SVGLine"},"Classes/SVGGroup.html#/s:ZvP8SwiftSVG10SVGElement11elementNameSS":{"name":"elementName","parent_name":"SVGGroup"},"Classes/SVGGroup.html#/s:vC8SwiftSVG8SVGGroup17attributesToApplyGVs10DictionarySSSS_":{"name":"attributesToApply","abstract":"<p>Store all attributes and values to be applied after all known sublayers have been added to this container</p>","parent_name":"SVGGroup"},"Classes/SVGGroup.html#/s:vP8SwiftSVG19SVGContainerElement14containerLayerCSo7CALayer":{"name":"containerLayer","parent_name":"SVGGroup"},"Classes/SVGGroup.html#/s:vP8SwiftSVG10SVGElement19supportedAttributesGVs10DictionarySSGSqFSST___":{"name":"supportedAttributes","parent_name":"SVGGroup"},"Classes/SVGGroup.html#/s:FP8SwiftSVG10SVGElement17didProcessElementFT2inGSqPS_19SVGContainerElement___GSqCSo6CGPath_":{"name":"didProcessElement(in:)","parent_name":"SVGGroup"},"Classes/SVGLayer.html#/s:vC8SwiftSVG8SVGLayer11boundingBoxVSC6CGRect":{"name":"boundingBox","abstract":"<p>The minimum CGRect that fits all subpaths</p>","parent_name":"SVGLayer"},"Classes/SVGLayer.html#/s:vC8SwiftSVG8SVGLayer9fillColorGSqCSo7CGColor_":{"name":"fillColor","abstract":"<p>Applies the given fill color to all sublayers</p>","parent_name":"SVGLayer"},"Classes/SVGLayer.html#/s:vC8SwiftSVG8SVGLayer9lineWidthV12CoreGraphics7CGFloat":{"name":"lineWidth","abstract":"<p>Applies the given line width to all <code>CAShapeLayer</code>s</p>","parent_name":"SVGLayer"},"Classes/SVGLayer.html#/s:vC8SwiftSVG8SVGLayer11strokeColorGSqCSo7CGColor_":{"name":"strokeColor","abstract":"<p>Applies the given stroke color to all <code>CAShapeLayer</code>s</p>","parent_name":"SVGLayer"},"Classes/SVGCircle.html#/s:ZvP8SwiftSVG10SVGElement11elementNameSS":{"name":"elementName","parent_name":"SVGCircle"},"Classes/SVGCircle.html#/s:vP8SwiftSVG15SVGShapeElement8svgLayerCSo12CAShapeLayer":{"name":"svgLayer","parent_name":"SVGCircle"},"Classes/SVGCircle.html#/s:vP8SwiftSVG10SVGElement19supportedAttributesGVs10DictionarySSGSqFSST___":{"name":"supportedAttributes","parent_name":"SVGCircle"},"Classes/SVGCircle.html#/s:FP8SwiftSVG10SVGElement17didProcessElementFT2inGSqPS_19SVGContainerElement___GSqCSo6CGPath_":{"name":"didProcessElement(in:)","parent_name":"SVGCircle"},"Classes/NSXMLSVGParser.html#/s:vC8SwiftSVG14NSXMLSVGParser14containerLayerCS_8SVGLayer":{"name":"containerLayer","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SVGLayer.html\">SVGLayer</a></code> that will contain all of the SVG&rsquo;s sublayers</p>","parent_name":"NSXMLSVGParser"},"Classes/NSXMLSVGParser.html#/s:vC8SwiftSVG14NSXMLSVGParser8svgPathsGSaCSo6CGPath_":{"name":"svgPaths","abstract":"<p>All subpaths parsed by this parser</p>","parent_name":"NSXMLSVGParser"},"Classes/NSXMLSVGParser.html#/s:FC8SwiftSVG14NSXMLSVGParsercFT6SVGURLV10Foundation3URL17supportedElementsGSqVS_26SVGParserSupportedElements_10completionGSqFCS_8SVGLayerT___S0_":{"name":"init(SVGURL:supportedElements:completion:)","abstract":"<p>Convenience initializer that can initalize an <code>NSXMLSVGParser</code> using a local or remote <code>URL</code></p>","parent_name":"NSXMLSVGParser"},"Classes/NSXMLSVGParser.html#/s:FC8SwiftSVG14NSXMLSVGParsercFT7SVGDataV10Foundation4Data17supportedElementsGSqVS_26SVGParserSupportedElements_10completionGSqFCS_8SVGLayerT___S0_":{"name":"init(SVGData:supportedElements:completion:)","abstract":"<p>Initializer that can initalize an <code>NSXMLSVGParser</code> using SVG <code>Data</code></p>","parent_name":"NSXMLSVGParser"},"Classes/NSXMLSVGParser.html#/s:FP8SwiftSVG9SVGParser12startParsingFT_T_":{"name":"startParsing()","parent_name":"NSXMLSVGParser"},"Classes/NSXMLSVGParser.html#/s:FC8SwiftSVG14NSXMLSVGParser6parserFTCSo9XMLParser15didStartElementSS12namespaceURIGSqSS_13qualifiedNameGSqSS_10attributesGVs10DictionarySSSS__T_":{"name":"parser(_:didStartElement:namespaceURI:qualifiedName:attributes:)","abstract":"<p>The <code>XMLParserDelegate</code> method called when the parser has started parsing an SVG element. This implementation will loop through all supported attributes and dispatch the attribiute value to the given curried function.</p>","parent_name":"NSXMLSVGParser"},"Classes/NSXMLSVGParser.html#/s:FC8SwiftSVG14NSXMLSVGParser6parserFTCSo9XMLParser13didEndElementSS12namespaceURIGSqSS_13qualifiedNameGSqSS__T_":{"name":"parser(_:didEndElement:namespaceURI:qualifiedName:)","abstract":"<p>The <code>XMLParserDelegate</code> method called when the parser has ended parsing an SVG element. This methods pops the last element parsed off the stack and checks if there is an enclosing container layer. Every valid SVG file is guaranteed to have at least one container layer (at a minimum, a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/SVGRootElement.html\">SVGRootElement</a></code> instance).</p>","parent_name":"NSXMLSVGParser"},"Classes/NSXMLSVGParser.html#/s:FC8SwiftSVG14NSXMLSVGParser20parserDidEndDocumentFCSo9XMLParserT_":{"name":"parserDidEndDocument(_:)","abstract":"<p>The <code>XMLParserDelegate</code> method called when the parser has finished parsing the SVG document. All supported elements and attributes are guaranteed to be dispatched at this point, but no guarantee that all elements have finished parsing.</p>","parent_name":"NSXMLSVGParser"},"Classes/SVGEllipse.html#/s:ZvP8SwiftSVG10SVGElement11elementNameSS":{"name":"elementName","parent_name":"SVGEllipse"},"Classes/SVGEllipse.html#/s:vP8SwiftSVG15SVGShapeElement8svgLayerCSo12CAShapeLayer":{"name":"svgLayer","parent_name":"SVGEllipse"},"Classes/SVGEllipse.html#/s:vP8SwiftSVG10SVGElement19supportedAttributesGVs10DictionarySSGSqFSST___":{"name":"supportedAttributes","parent_name":"SVGEllipse"},"Classes/SVGEllipse.html#/s:FP8SwiftSVG10SVGElement17didProcessElementFT2inGSqPS_19SVGContainerElement___GSqCSo6CGPath_":{"name":"didProcessElement(in:)","parent_name":"SVGEllipse"},"Classes/SVGRectangle.html#/s:ZvP8SwiftSVG10SVGElement11elementNameSS":{"name":"elementName","parent_name":"SVGRectangle"},"Classes/SVGRectangle.html#/s:vP8SwiftSVG15SVGShapeElement8svgLayerCSo12CAShapeLayer":{"name":"svgLayer","parent_name":"SVGRectangle"},"Classes/SVGRectangle.html#/s:vP8SwiftSVG10SVGElement19supportedAttributesGVs10DictionarySSGSqFSST___":{"name":"supportedAttributes","parent_name":"SVGRectangle"},"Classes/SVGRectangle.html#/s:FP8SwiftSVG10SVGElement17didProcessElementFT2inGSqPS_19SVGContainerElement___GSqCSo6CGPath_":{"name":"didProcessElement(in:)","parent_name":"SVGRectangle"},"Classes/SVGRectangle.html":{"name":"SVGRectangle","abstract":"<p>Concrete implementation that creates a <code>CAShapeLayer</code> from a <code>&lt;rect&gt;</code> element and its attributes</p>"},"Classes/SVGEllipse.html":{"name":"SVGEllipse","abstract":"<p>Concrete implementation that creates a <code>CAShapeLayer</code> from a <code>&lt;ellipse&gt;</code> element and its attributes</p>"},"Classes/NSXMLSVGParser.html":{"name":"NSXMLSVGParser","abstract":"<p>Concrete implementation of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SVGParser.html\">SVGParser</a></code> that uses Foundation&rsquo;s <code>XMLParser</code> to parse a given SVG file.</p>"},"Classes/SVGCircle.html":{"name":"SVGCircle","abstract":"<p>Concrete implementation that creates a <code>CAShapeLayer</code> from a <code>&lt;circle&gt;</code> element and its attributes</p>"},"Classes/SVGLayer.html":{"name":"SVGLayer","abstract":"<p>A <code>CAShapeLayer</code> subclass that allows you to easily work with sublayers and get sizing information</p>"},"Classes/SVGGroup.html":{"name":"SVGGroup","abstract":"<p>Concrete implementation that creates a container from a <code>&lt;g&gt;</code> element and applies its attribites to all sublayers</p>"},"Classes.html#/s:C8SwiftSVG7SVGView":{"name":"SVGView","abstract":"<p>A <code>UIView</code> subclass that can be used in Interface Builder where you can set the @IBInspectable propert <code>SVGName</code> in the side panel. Use the UIView extensions if you want to creates SVG views programmatically.</p>"},"Classes/SVGLine.html":{"name":"SVGLine","abstract":"<p>Concrete implementation that creates a <code>CAShapeLayer</code> from a <code>&lt;line&gt;</code> element and its attributes</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structs","abstract":"<p>The following structs are available globally.</p>"}}